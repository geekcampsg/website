---
import Logo from "@src/components/Logo.astro"
import Layout from "@src/layouts/Layout.astro"
import Selector from "./_/Selector.svelte"
import schedule2017 from "@src/data/schedules/2017"
import schedule2018 from "@src/data/schedules/2018"
import schedule2019 from "@src/data/schedules/2019"
import schedule2020 from "@src/data/schedules/2020"
import schedule2021 from "@src/data/schedules/2021"
import { schedule as schedule2022 } from "@src/data/schedules/2022"
import { schedule as schedule2023 } from "@src/data/schedules/2023"
import { schedule as schedule2024 } from "@src/data/schedules/2024"
// print out schedule2022 in console
console.log(JSON.stringify(schedule2023, null, 2)) 

import xss from "xss"
import { formatDateFull } from "@src/utils/date-format"

const schedules = [
  ["GeekcampSG 2024", schedule2024],
  ["GeekcampSG 2023", schedule2023],
  ["GeekcampSG 2022", schedule2022],
  ["GeekcampSG 2021", schedule2021],
  ["GeekcampSG 2020", schedule2020],
  ["GeekcampSG 2019", schedule2019],
  ["GeekcampSG 2018+", schedule2018],
  ["GeekcampSG 2017", schedule2017],
] as const
---

<Layout title="Past Events">
  <section>
    <Logo />
  </section>
  <section class="rows">
    <div class="sidenav">
      <h2>Past Events</h2>
      <Selector
        client:load
        schedules={schedules.map(([name, schedule]) => [name, schedule.year])}
      />
    </div>
    <div>
      <ul>
        {
          schedules.map(([name, schedule]) => (
            <li id={schedule.year}>
              <h3>{name} </h3>
              {schedule.dates.map((evtDate) => (
                <div>
                  <div class="date">{formatDateFull(evtDate.date)}</div>
                  <ul>
                    {evtDate.talks?.filter(talk => talk.speakers?.length > 0).map((talk) => (
                        <li class="schedule-item">
                          <h4>
                            {talk.title}{" "}
                            {talk.video ? (
                              <a
                                href={talk.video}
                                target="_blank"
                                rel="noreferrer noopener"
                              >
                                Video
                              </a>
                            ) : null}
                            {talk.slides ? (
                              <a
                                href={talk.slides}
                                target="_blank"
                                rel="noreferrer"
                              >
                                <svg
                                  xmlns="http://www.w3.org/2000/svg"
                                  viewBox="0 0 2048 2048"
                                  fill="currentColor"
                                  width="16px"
                                >
                                  <path d="M1707 715q76 27 139 75t108 111 69 138 25 156q0 106-40 199t-110 162-163 110-199 41h-512q-106 0-199-40t-162-110-110-163-41-199q0-106 40-199t110-162 163-110 199-41h171q0 35-13 66t-37 54-55 36-66 14q-71 0-133 27t-108 73-73 109-27 133q0 71 27 133t73 108 108 73 133 27h512q70 0 132-27t109-73 73-108 27-133q0-92-46-168t-124-123V715zM171 683q0 91 46 167t124 124v189q-76-27-139-75T94 977 25 839 0 683q0-106 40-199t110-162 163-110 199-41h512q106 0 199 40t162 110 110 163 41 199q0 106-40 199t-110 162-163 110-199 41H853q0-35 13-66t37-54 54-37 67-14q70 0 132-27t109-73 73-108 27-133q0-70-26-132t-73-109-109-74-133-27H512q-71 0-133 27t-108 73-73 109-27 133z" />
                                </svg>
                                Slides
                              </a>
                            ) : null}
                          </h4>
                          {talk.speakers ? (
                            <div class="speakers">
                              {talk.speakers.map((speaker) => speaker.name).join(", ")}
                            </div>
                          ) : null}
                          <p set:html={xss(talk.summary)} />
                        </li>
                      ))}
                  </ul>
                </div>
              ))}
            </li>
          ))
        }
      </ul>
    </div>
  </section>
</Layout>

<style>
  @media screen and (min-width: 1280px) {
    .sidenav {
      position: sticky;
      top: var(--padding);
      margin-bottom: auto;
    }
  }
  li[id] {
    display: none;
    scroll-padding: var(--padding);
  }
  li[id]:target {
    display: block !important;
  }
  h3 {
    font-size: 2.5rem;
    margin: 0.5rem 0 0;
    border-top: 2px solid var(--yellow);
    padding-top: 1rem;
  }
  @media screen and (min-width: 1280px) {
    h3 {
      padding-top: 0;
      border-top: none;
    }
  }
  .date {
    font-size: 2rem;
    margin-bottom: 3rem;
  }
  ul {
    list-style: none;
    margin-left: 0;
    padding: 0;
  }
  .schedule-item {
    position: relative;
    padding: 0 0 3.5rem 2rem;
    margin-bottom: 0;
  }
  .schedule-item::before {
    content: "";
    background: #61bfad;
    border-radius: 100%;
    width: 1.38888rem;
    height: 1.38888rem;
    position: absolute;
    margin-left: -1px;
    left: 0;
    top: 0.277777778rem;
    z-index: 1;
  }

  .schedule-item::after {
    content: "";
    position: absolute;
    top: 0.277777778rem;
    bottom: -0.277777778rem;
    border-left: 1px solid #2b292d;
    left: 0;
    margin-left: 0.625rem;
  }
  .schedule-item:last-child::after {
    display: none;
  }

  .speakers {
    display: block;
    color: #808081;
    font-weight: normal;
    font-size: 1.5rem;
    text-transform: none;
  }

  @media screen and (min-width: 768px) {
    .schedule-item::before {
      transform: translateX(-50%);
    }
    .schedule-item::after {
      left: -1px;
      margin-left: 0;
    }
  }
  h4 {
    font-size: 2rem;
    line-height: 1;
    margin: 0;
    margin-bottom: 0.25em;
  }
  a {
    font-size: 1.5rem;
    font-weight: 400;
  }
  p {
    margin: 0;
  }
</style>
